# Problem 12
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?
# Answer: 76576500

def findfactors(start, final)
  results = []
  (start..final/start).each do | i | 
   if final%i == 0 
     results = [i, final/i]
     # need to figure out if we should continue
     if i < final/i
       results += findfactors(i+1, final)
       break
     end
   end
  end
  return results.sort!
end

tri = 1
count = 1
while findfactors(1, tri).length < 500 do
  count += 1
  tri += count
end
puts tri